.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "RT::RichTextUpload 3"
.TH RT::RichTextUpload 3 "2017-04-26" "perl v5.18.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
RT::RichTextUpload \- Represents a single rich\-text\-editor image upload
.SH "METHODS"
.IX Header "METHODS"
.SS "Create \s-1PARAMHASH\s0"
.IX Subsection "Create PARAMHASH"
Create takes a hash of values and creates a row in the database.  Available keys are:
.IP "Filename" 4
.IX Item "Filename"
.PD 0
.IP "Digest" 4
.IX Item "Digest"
.IP "Headers" 4
.IX Item "Headers"
.IP "ContentType" 4
.IX Item "ContentType"
.IP "ContentEncoding" 4
.IX Item "ContentEncoding"
.IP "Content" 4
.IX Item "Content"
.PD
.PP
Returns a tuple of (status, msg) on failure and (id, msg) on success.
.SS "DecodedContent"
.IX Subsection "DecodedContent"
Returns the \f(CW\*(C`Content\*(C'\fR after decoding of the \f(CW\*(C`ContentEncoding\*(C'\fR.
.ie n .SS "GetHeader $TAG"
.el .SS "GetHeader \f(CW$TAG\fP"
.IX Subsection "GetHeader $TAG"
Returns the value of the \fBfirst\fR header Tag as a string. This bypasses the
weeding out done in \fIHeaders()\fR above.
.PP
Copied from RT::Attachment
.SS "OriginalEncoding"
.IX Subsection "OriginalEncoding"
Returns the attachment's original encoding.
.PP
Copied from RT::Attachment
.SS "Delete"
.IX Subsection "Delete"
RichTextUpload records may not be deleted.  Always returns failure.
.SS "_Set"
.IX Subsection "_Set"
RichTextUpload records may not be changed.  Always returns failure.
